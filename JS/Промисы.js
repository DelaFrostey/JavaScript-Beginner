// промис это обещание предоставить результат позже, а не сразу. Они позволяют обрабатывать отложенные во времени события.

//асинхронные запросы - такие запросы, ответы на которые мы получим не сразу, так как мы ждём ответа от сервера.

// промис вернёт ошибку, если результат получить невозможно по какой-либо причине.

//состояния промиса - ожидание(pending), исполнен(resolve), отклонён(reject)

const myPromise = new Promise((resolve, reject) => {
// Вновь созданный промис будет в состоянии pending
// выполнение асинхронных действий
// внутри колбэк функций нужно вызвать одну из функций resolve|reject
});


//далее опишем как работать с полученным результатом промиса
myPromise
  .then(value => {
    //тут описано действие в случае успешного исполнения промиса
    // value - это значение, переданное в вызове функции resolve внутри промиса
  })
  .catch(error => {
    //тут описано дейтсвие в случае отклонения промиса
    // error - это значение, переданное в вызове функции reject внутри промиса
  })